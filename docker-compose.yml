version: '3.8'

services:
  postgres:
    container_name: e-petitions-project-db
    image: postgres:16.0
    networks:
      - e-petitions-network
    environment:
      POSTGRES_DB : e-petitions-project-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      PGDATA: /data/e-petitions-project-db
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres-db:/data/postgres
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 60s

  redis:
    image: redis:7.0.13
    networks:
      - e-petitions-network
    container_name: e-petitions-redis-db
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  mailcatcher:
    image: dockage/mailcatcher:0.9.0
    container_name: e-petitions-project-mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"
  rabbitmq:
    image: rabbitmq:3.13-rc-management
    networks:
      - e-petitions-network
    container_name: e-petitions-project-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  gateway:
    container_name: gateway
    image: e-petitions-gateway
    networks:
      - e-petitions-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres-db:
    driver: local
  redis-data:
    driver: local

networks:
  e-petitions-network:
    driver: bridge